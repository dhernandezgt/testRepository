# abrir VScode desde la carpeta de trabajo
    code .

# chequear estatus de los archivos
    git status 

# Agregar archivos, Nunca usar .
    git add [nombre archivos]
    git add *.txt 

# chequear estatus de los archivos
    git status 

# commit archivos 
    git commit -m "initial commit"

# despues de cambio en archivos
    git add [file]
    git commit # sin -m y abri el archivo para poner mensajes
    git status

# Si se necesita borrar
    rm [archivo]
    git status
    git commit -m "eliminando archivos"
    git status

# eliminar y hacer commit
    git rm [file]
    git status

#  si se desea regresar al archivo borrado
    git restore --staged [file]

#  cambiar el nombre
    mv [file] [newFile]  # se renombro
    git status # Git no hace track al nuevo pero se observa borrado el file
    git add [file] [newFile]
    git status # efectivamente se renombro
    git commit -m "Message"

    #alternativamente
    git mv [file] [newFile]
    git commit -m "Message"

####  Ignorar archivos que no sean subida a Git
# en la carpeta principal agregar file .gitignore y agregar files y directorios
    git add .gitignore
    git commit -m "agregando archivo gitignore"


# modo compacto de observar cambios
    git status -s

# observar la diferencia de lo qeu se agregando
    git diff
    # Se sale con la letra q
    git diff --staged

# ver cambios
    git log --oneline

# Branchs por ejemplo de arreglar un issue
    git status 
    git branch # ver el Branch
    # crear nuevo branch
    git checkout -b ramaB
    git branch
    git status
    # ver historial 
    git log --oneline
    # salir a la rama main
    git checkout main

# Traer los cambios de la ramaB a la rama principal
    #Nota Estar en la rama main
    git merge ramaB

# Cuenta y repositorio URL en github sacar llave
    # crear el repositorio
    git remote add origin [URL]
    # subir archivos, con -u se crea la rama
    git push -u origen main


 










